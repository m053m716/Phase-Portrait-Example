%MAIN Contains code to organize the rest of the example repo

%% Undamped Pendulum: Example 1
clear; clc;
angular_position = linspace(-1.1*pi,1.1*pi,16);
angular_velocity = linspace(-1.1*pi,1.1*pi,16);
y = initializeGrid(angular_position,angular_velocity); % Initialize values for grid of phase portrait
dy = undamped_pendulum(y);

fig = figure(...
   'Name','Phase Portrait Undamped Pendulum',...
   'Color','w',...
   'NumberTitle','off',...
   'Units','Normalized',...
   'Position',[0.25 0.2 0.45 0.7]);
ax = axes(fig,...
   'XColor','k','YColor','k',...
   'LineWidth',1.5,'FontName','Arial','NextPlot','add',...
   'XLim',[min(y(1,:)), max(y(1,:))],'YLim',[min(y(2,:)),max(y(2,:))]);
quiver(ax,y(1,:),y(2,:),dy(1,:),dy(2,:),'k',...
   'LineWidth',1.5,...
   'DisplayName','dy/dt');
xlabel(ax,'\bf\ity_1\rm ~ Position (radians)','FontName','Arial','Color','k');
ylabel(ax,'\bf\ity_2\rm ~ Velocity (radians)','FontName','Arial','Color','k');
title(ax,'Phase Portrait: Undamped Pendulum (no driving force)',...
   'FontName','Arial','Color','k');

% Solve system using ODE45 with different initial conditions
BLUE_INITIAL_CONDITIONS = [pi/4; pi/4]; % [position, velocity]
[~,ys] = ode45(@(t,y)undamped_pendulum(y),[0 10],BLUE_INITIAL_CONDITIONS);
plot(ax,ys(:,1),ys(:,2),...
   'Color','b',...
   'LineWidth',2,...
   'MarkerIndices',1,...
   'Marker','o',...
   'MarkerFaceColor','b',...
   'DisplayName','Stable Initial Conditions');

% Solve system using ODE45 with different initial conditions
RED_INITIAL_CONDITIONS = [-1; -1]; % [position, velocity]
[~,ys] = ode45(@(t,y)undamped_pendulum(y),[0 5],RED_INITIAL_CONDITIONS);
plot(ax,ys(:,1),ys(:,2),...
   'Color','r',...
   'LineWidth',2,...
   'MarkerIndices',1,...
   'Marker','o',...
   'MarkerFaceColor','r',...
   'DisplayName','Also Stable Initial Conditions');

line(ax,[0,2*pi],[0,0],'LineStyle','none',...
   'Marker','o','MarkerFaceColor','m','MarkerEdgeColor','k',...
   'DisplayName','Fixed point','MarkerSize',12);

legend(ax,'TextColor','k','FontName','Arial');

saveas(fig,'Undamped Pendulum Example 1.png');
savefig(fig,'Undamped Pendulum Example 1.fig');
pause(0.5);
delete(fig);

%% Undamped Pendulum: Example 2 
clear; clc;
angular_position = linspace(-1.1*pi,3.1*pi,16);
angular_velocity = linspace(-1.1*pi,1.1*pi,16);
y = initializeGrid(angular_position,angular_velocity); % Initialize values for grid of phase portrait
dy = undamped_pendulum(y);

fig = figure(...
   'Name','Phase Portrait Undamped Pendulum',...
   'Color','w',...
   'NumberTitle','off',...
   'Units','Normalized',...
   'Position',[0.25 0.2 0.45 0.7]);
ax = axes(fig,...
   'XColor','k','YColor','k',...
   'LineWidth',1.5,'FontName','Arial','NextPlot','add',...
   'XLim',[min(y(1,:)), max(y(1,:))],'YLim',[min(y(2,:)),max(y(2,:))]);
quiver(ax,y(1,:),y(2,:),dy(1,:),dy(2,:),'k',...
   'LineWidth',1.5,...
   'DisplayName','dy/dt');
xlabel(ax,'\bf\ity_1\rm ~ Position (radians)','FontName','Arial','Color','k');
ylabel(ax,'\bf\ity_2\rm ~ Velocity (radians)','FontName','Arial','Color','k');
title(ax,'Phase Portrait: Undamped Pendulum (no driving force)',...
   'FontName','Arial','Color','k');

% Solve system using ODE45 with different initial conditions
BLUE_INITIAL_CONDITIONS = [pi/4; pi/4]; % [position, velocity]
[~,ys] = ode45(@(t,y)undamped_pendulum(y),[0 10],BLUE_INITIAL_CONDITIONS);
plot(ax,ys(:,1),ys(:,2),...
   'Color','b',...
   'LineWidth',2,...
   'MarkerIndices',1,...
   'Marker','o',...
   'MarkerFaceColor','b',...
   'DisplayName','Stable Initial Conditions');

% Solve system using ODE45 with different initial conditions
RED_INITIAL_CONDITIONS = [-1.65; 1.45]; % [position, velocity]
[~,ys] = ode45(@(t,y)undamped_pendulum(y),[0 20],RED_INITIAL_CONDITIONS);
plot(ax,ys(:,1),ys(:,2),...
   'Color','r',...
   'LineWidth',2,...
   'MarkerIndices',1,...
   'Marker','o',...
   'MarkerFaceColor','r',...
   'DisplayName','Unstable Initial Conditions');

line(ax,[0,2*pi],[0,0],'LineStyle','none',...
   'Marker','o','MarkerFaceColor','m','MarkerEdgeColor','k',...
   'DisplayName','Fixed point','MarkerSize',12);

legend(ax,'TextColor','k','FontName','Arial');

saveas(fig,'Undamped Pendulum Example 2.png');
savefig(fig,'Undamped Pendulum Example 2.fig');
pause(0.5);
delete(fig);


%% Stable Node example 
clear; clc;
angular_position = linspace(-1.1*pi,1.1*pi,16);
angular_velocity = linspace(-1.1*pi,1.1*pi,16);
y = initializeGrid(angular_position,angular_velocity); % Initialize values for grid of phase portrait
dy = stable_attractor(y);

fig = figure(...
   'Name','Phase Portrait Stable Node',...
   'Color','w',...
   'NumberTitle','off',...
   'Units','Normalized',...
   'Position',[0.25 0.2 0.45 0.7]);
ax = axes(fig,...
   'XColor','k','YColor','k',...
   'LineWidth',1.5,'FontName','Arial','NextPlot','add',...
   'XLim',[min(y(1,:)), max(y(1,:))],'YLim',[min(y(2,:)),max(y(2,:))]);
quiver(ax,y(1,:),y(2,:),dy(1,:),dy(2,:),'k',...
   'LineWidth',1.5,...
   'DisplayName','dy/dt');
xlabel(ax,'\bf\ity_1\rm ~ Position (radians)','FontName','Arial','Color','k');
ylabel(ax,'\bf\ity_2\rm ~ Velocity (radians)','FontName','Arial','Color','k');
title(ax,'Phase Portrait: Undamped Pendulum (no driving force)',...
   'FontName','Arial','Color','k');

% Solve system using ODE45 with different initial conditions
BLUE_INITIAL_CONDITIONS = [pi/4; pi/4]; % [position, velocity]
[~,ys] = ode45(@(t,y)undamped_pendulum(y),[0 10],BLUE_INITIAL_CONDITIONS);
plot(ax,ys(:,1),ys(:,2),...
   'Color','b',...
   'LineWidth',2,...
   'MarkerIndices',1,...
   'Marker','o',...
   'MarkerFaceColor','b',...
   'DisplayName','Initial Conditions No Longer Matter');

line(ax,0,0,'LineStyle','none',...
   'Marker','o','MarkerFaceColor','m','MarkerEdgeColor','k',...
   'DisplayName','Fixed point','MarkerSize',12);

legend(ax,'TextColor','k','FontName','Arial');

saveas(fig,'Stable Node Example.png');
savefig(fig,'Stable Node Example.fig');
pause(0.5);
delete(fig);